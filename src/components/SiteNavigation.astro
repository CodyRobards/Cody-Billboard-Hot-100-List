---
import type { YearEntry } from "../lib/content-utils";

interface Props {
  years: Record<number, YearEntry[]>;
  currentPath: string;
}

const { years, currentPath } = Astro.props as Props;

const yearKeys = Object.keys(years)
  .map((key) => Number(key))
  .sort((a, b) => a - b);

const ensureTrailingSlash = (href: string) => (href.endsWith("/") ? href : `${href}/`);

const isActive = (href: string) => {
  const normalizedHref = ensureTrailingSlash(href);
  return currentPath === normalizedHref || currentPath.startsWith(normalizedHref);
};
---

<nav class="site-nav" aria-label="Archive navigation">
  <div class="site-nav__intro">
    <a class="site-nav__home" href="/" aria-current={currentPath === "/" ? "page" : undefined}>
      Overview
    </a>
    <a
      class="site-nav__home"
      href="/about/"
      aria-current={isActive("/about/") ? "page" : undefined}
    >
      About
    </a>
  </div>
  <div class="site-nav__section" aria-label="Years">
    <h2 class="site-nav__heading">Yearly rankings</h2>
    <ul class="site-nav__year-list">
      {
        yearKeys.map((year) => {
          const [primaryEntry] = years[year] ?? [];
          if (!primaryEntry) return null;
          const href = ensureTrailingSlash(`/years/${primaryEntry.slug}`);

          return (
            <li class={`site-nav__year-item ${isActive(href) ? "is-current" : ""}`}>
              <a
                class="site-nav__year-link"
                href={href}
                aria-current={isActive(href) ? "page" : undefined}
              >
                {year}
              </a>
            </li>
          );
        })
      }
    </ul>
  </div>
</nav>
