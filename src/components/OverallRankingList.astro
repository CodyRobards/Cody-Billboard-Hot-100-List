---
import { getAlbumArt } from "../lib/album-art";
import { getSpotifyTrackId } from "../data/spotify-tracks";

interface RankingEntry {
  position: number;
  title: string;
  artist: string;
  spotifyTrackId?: string;
}

interface Props {
  heading: string;
  description?: string;
  items: RankingEntry[];
}

const { heading, description, items } = Astro.props as Props;
const medalIcons = ["ðŸ¥‡", "ðŸ¥ˆ", "ðŸ¥‰"];
const resolvedItems = items.map((entry) => {
  const spotifyTrackId = entry.spotifyTrackId ?? getSpotifyTrackId(entry.title, entry.artist);
  const artwork = getAlbumArt(entry.title, entry.artist);
  return {
    ...entry,
    spotifyTrackId,
    artwork,
  };
});
---

<section class="article__table" aria-labelledby={heading.replace(/\s+/g, "-").toLowerCase()}>
  <u><h2 class="section__title" id={heading.replace(/\s+/g, "-").toLowerCase()}>{heading}</h2></u>
  {description ? <p class="section__lead">{description}</p> : null}
  <ol class="overall-ranking-list">
    {
      resolvedItems.map((entry) => {
        const medal = medalIcons[entry.position - 1];
        const embedId = `spotify-${entry.position}`;
        return (
          <li class="overall-ranking-list__item">
            <span
              class={`overall-ranking-list__position ${
                medal ? "overall-ranking-list__position--medal" : ""
              }`}
            >
              {medal ?? `${entry.position}.`}
            </span>
            <div class="overall-ranking-list__content">
              <picture class="overall-ranking-list__artwork">
                {entry.artwork.avif ? (
                  <source srcset={entry.artwork.avif} type="image/avif" />
                ) : null}
                <source srcset={entry.artwork.webp} type="image/webp" />
                <img
                  src={entry.artwork.webp}
                  alt={entry.artwork.alt}
                  loading="lazy"
                  decoding="async"
                  width="88"
                  height="88"
                />
              </picture>
              <div class="overall-ranking-list__details">
                <span class="overall-ranking-list__title">{entry.title}</span>
                <span class="overall-ranking-list__artist">
                  <a
                    class="overall-ranking-list__artist-link"
                    href={`/search/?q=${encodeURIComponent(entry.artist)}`}
                  >
                    {entry.artist}
                  </a>
                </span>
              </div>
              {entry.spotifyTrackId ? (
                <div class="overall-ranking-list__preview">
                  <button
                    type="button"
                    class="overall-ranking-list__spotify-toggle"
                    data-track-id={entry.spotifyTrackId}
                    aria-controls={embedId}
                    aria-expanded="false"
                  >
                    Play on Spotify
                  </button>
                  <div id={embedId} class="overall-ranking-list__spotify" hidden />
                </div>
              ) : null}
            </div>
          </li>
        );
      })
    }
  </ol>
</section>

<style>
  .section__lead {
    border-bottom: 1px solid var(--color-border, rgba(0, 0, 0, 0.08));
  }
  .overall-ranking-list {
    display: grid;
    gap: 0.25rem;
    padding: 0;
    margin: 0;
    list-style: none;
  }

  .overall-ranking-list__item {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
    align-items: flex-start;
    padding-bottom: 0.75rem;
    border-bottom: 1px solid var(--color-border, rgba(0, 0, 0, 0.08));
  }

  .overall-ranking-list__position {
    font-family: var(--font-heading, inherit);
    font-weight: 600;
    color: var(--color-accent, #8a2be2);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-width: 2.75rem;
    font-size: 1.05rem;
  }

  .overall-ranking-list__position--medal {
    font-size: 1.35rem;
  }

  .overall-ranking-list__content {
    display: grid;
    grid-template-columns: auto minmax(0, 1fr) auto;
    align-items: center;
    gap: clamp(1rem, 3vw, 1.5rem);
    flex: 1;
  }

  .overall-ranking-list__artwork {
    width: 88px;
    height: 88px;
    border-radius: 0.5rem;
    overflow: hidden;
    background-color: var(--color-border, rgba(0, 0, 0, 0.05));
  }

  .overall-ranking-list__artwork img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .overall-ranking-list__details {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
    flex: 1 1 auto;
    min-width: 0;
  }

  .overall-ranking-list__title {
    font-weight: 600;
  }

  .overall-ranking-list__artist {
    color: var(--color-text-muted, rgba(0, 0, 0, 0.65));
  }

  .overall-ranking-list__artist-link {
    color: inherit;
    text-decoration: none;
  }

  .overall-ranking-list__artist-link:hover,
  .overall-ranking-list__artist-link:focus-visible {
    text-decoration: underline;
  }

  .overall-ranking-list__preview {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 0.5rem;
    flex: 0 1 18rem;
    max-width: 100%;
  }

  .overall-ranking-list__spotify-toggle {
    align-self: flex-start;
    padding: 0.35rem 0.75rem;
    border: 1px solid var(--color-border, rgba(0, 0, 0, 0.12));
    border-radius: 9999px;
    background-color: transparent;
    color: inherit;
    font: inherit;
    cursor: pointer;
    transition:
      background-color 150ms ease,
      border-color 150ms ease;
  }

  .overall-ranking-list__spotify-toggle:hover,
  .overall-ranking-list__spotify-toggle:focus-visible {
    background-color: var(--color-surface-elevated, rgba(0, 0, 0, 0.05));
    border-color: var(--color-border-strong, rgba(0, 0, 0, 0.25));
  }

  .overall-ranking-list__spotify {
    width: min(100%, 20rem);
  }

  .overall-ranking-list__spotify iframe {
    width: 100%;
    height: 80px;
    border-radius: 0.75rem;
  }

  @media (max-width: 62rem) {
    .overall-ranking-list__content {
      grid-template-columns: auto minmax(0, 1fr);
    }

    .overall-ranking-list__preview {
      grid-column: 1 / -1;
    }
  }

  @media (max-width: 48rem) {
    .overall-ranking-list__item {
      align-items: center;
    }

    .overall-ranking-list__content {
      grid-template-columns: minmax(0, 1fr);
      justify-items: start;
      gap: 0.75rem;
    }

    .overall-ranking-list__preview {
      width: 100%;
      max-width: none;
      align-items: stretch;
    }
  }

  @media (max-width: 40rem) {
    .overall-ranking-list__spotify {
      width: 100%;
    }
  }
</style>
