---
import SiteLayout from "../layouts/SiteLayout.astro";
import ResponsiveImage from "../components/ResponsiveImage.astro";
import { getYearGroups } from "../lib/content-utils";
import { getCollection } from "astro:content";

const heroImage = {
  src: "/images/meta/archive.jpg",
  width: 1600,
  height: 900,
  alt: "Rows of catalog drawers and vinyl sleeves representing the Hot 100 archive",
  format: "jpg" as const,
};

const [yearGroups, metaEntries] = await Promise.all([getYearGroups(), getCollection("meta")]);

const flatten = <T,>(groups: Record<PropertyKey, T[]>) => Object.values(groups).flat();
const sortByRanking = <T extends { data: { ranking: number } }>(entries: T[]) =>
  [...entries].sort((a, b) => a.data.ranking - b.data.ranking);

const yearHighlights = sortByRanking(flatten(yearGroups)).slice(0, 3);

const sortedYears = Object.keys(yearGroups)
  .map((year) => Number(year))
  .sort((a, b) => b - a);

const latestYearEntry = sortedYears
  .map((year) => (yearGroups[year] ?? [])[0])
  .find((entry): entry is (typeof yearHighlights)[number] => Boolean(entry));

const aboutEntry =
  metaEntries.find((entry) => entry.slug === "about-the-archive") ?? metaEntries[0];

const formatDate = (
  date: Date,
  options: Intl.DateTimeFormatOptions = { month: "short", year: "numeric" }
) => new Intl.DateTimeFormat("en", options).format(date);

const toHref = (segment: string, slug: string) => `/${segment}/${slug}/`;
---

<SiteLayout
  description="Explore Cody's Billboard Hot 100 archive with year-by-year recaps and curated chart milestones."
  pageTitle="Home"
>
  <article class="hero">
    <div class="hero__content">
      <p class="hero__kicker">Design &amp; UX implementation</p>
      <h1>Billboard Hot 100, recapped year by year.</h1>
      <p class="hero__lead">
        Dive into the Hot 100 one season at a time with a catalog built for quick lookup, rich
        annotations, and responsive performance.
      </p>
      <div class="hero__actions">
        {
          latestYearEntry ? (
            <a class="hero__action" href={toHref("years", latestYearEntry.slug)}>
              Explore {latestYearEntry.data.year}
            </a>
          ) : null
        }
        <a class="hero__action hero__action--secondary" href="/years/">Browse all years</a>
      </div>
    </div>
    <figure class="hero__media">
      <ResponsiveImage
        image={heroImage}
        sizes="(min-width: 70rem) 28rem, 100vw"
        class="hero__image"
      />
    </figure>
  </article>

  <section class="section" aria-labelledby="year-section">
    <header class="section__header">
      <h2 class="section__title" id="year-section">Yearly recaps</h2>
      <p class="section__lead">
        Finer-grain stories for seasons of the charts, featuring pivotal releases and crossovers.
      </p>
    </header>
    <div class="record-grid">
      {
        yearHighlights.map((entry) => (
          <article class="record-card">
            <h3 class="record-card__title">
              <a href={toHref("years", entry.slug)}>{entry.data.title}</a>
            </h3>
            <p class="record-card__excerpt">{entry.data.commentary_excerpt}</p>
            <div class="record-card__meta">
              <span>#{entry.data.ranking}</span>
              <span>{entry.data.year}</span>
              <span>{formatDate(entry.data.release_date)}</span>
            </div>
          </article>
        ))
      }
    </div>
  </section>

  {
    aboutEntry ? (
      <>
        <section class="sidebar-panel" aria-labelledby="sidebar-overview" slot="sidebar">
          <h2 class="sidebar-panel__title" id="sidebar-overview">
            How this archive works
          </h2>
          <p>{aboutEntry.data.commentary_excerpt}</p>
          <ul class="sidebar-panel__list">
            <li class="sidebar-panel__item">
              <a href="/about/">Read the full overview</a>
            </li>
          </ul>
        </section>
        <section class="sidebar-panel" aria-labelledby="sidebar-updates" slot="sidebar">
          <h2 class="sidebar-panel__title" id="sidebar-updates">
            Recent yearly recaps
          </h2>
          <ul class="sidebar-panel__list">
            {sortedYears.slice(0, 8).map((year) => {
              const [entry] = yearGroups[year] ?? [];
              if (!entry) return null;
              return (
                <li class="sidebar-panel__item">
                  <a href={toHref("years", entry.slug)}>
                    {entry.data.title} Â· {year}
                  </a>
                </li>
              );
            })}
          </ul>
        </section>
      </>
    ) : null
  }
</SiteLayout>
